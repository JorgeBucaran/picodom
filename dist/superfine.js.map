{"version":3,"sources":["dist/superfine.js"],"names":["global","factory","exports","module","define","amd","self","superfine","this","EMPTY_OBJ","EMPTY_ARR","map","isArray","Array","listener","event","handlers","type","patchProperty","node","key","oldValue","newValue","isSvg","slice","toLowerCase","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","vnode","document","createTextNode","name","createElementNS","createElement","props","k","i","len","children","length","appendChild","getKey","patchNode","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldVProps","newVProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","a","b","out","merge","keyed","newKeyed","createVNode","createTextVNode","value","recycleNode","nodeType","nodeName","call","childNodes","h","rest","arguments","push","pop","patch","vdom","parentNode"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.superfine = {}));\n}(this, function (exports) { 'use strict';\n\n  var RECYCLED_NODE = 1;\n  var TEXT_NODE = 3;\n  var EMPTY_OBJ = {};\n  var EMPTY_ARR = [];\n  var map = EMPTY_ARR.map;\n  var isArray = Array.isArray;\n\n  var merge = function(a, b) {\n    var out = {};\n\n    for (var k in a) out[k] = a[k];\n    for (var k in b) out[k] = b[k];\n\n    return out\n  };\n\n  var listener = function(event) {\n    this.handlers[event.type](event);\n  };\n\n  var patchProperty = function(node, key, oldValue, newValue, isSvg) {\n    if (key === \"key\") ; else if (key[0] === \"o\" && key[1] === \"n\") {\n      if (\n        !((node.handlers || (node.handlers = {}))[\n          (key = key.slice(2).toLowerCase())\n        ] = newValue)\n      ) {\n        node.removeEventListener(key, listener);\n      } else if (!oldValue) {\n        node.addEventListener(key, listener);\n      }\n    } else if (!isSvg && key !== \"list\" && key in node) {\n      node[key] = newValue == null ? \"\" : newValue;\n    } else if (newValue == null || newValue === false) {\n      node.removeAttribute(key);\n    } else {\n      node.setAttribute(key, newValue);\n    }\n  };\n\n  var createNode = function(vnode, isSvg) {\n    var node =\n      vnode.type === TEXT_NODE\n        ? document.createTextNode(vnode.name)\n        : (isSvg = isSvg || vnode.name === \"svg\")\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", vnode.name)\n        : document.createElement(vnode.name);\n    var props = vnode.props;\n\n    for (var k in props) {\n      patchProperty(node, k, null, props[k], isSvg);\n    }\n\n    for (var i = 0, len = vnode.children.length; i < len; i++) {\n      node.appendChild(createNode(vnode.children[i], isSvg));\n    }\n\n    return (vnode.node = node)\n  };\n\n  var getKey = function(vnode) {\n    return vnode == null ? null : vnode.key\n  };\n\n  var patchNode = function(parent, node, oldVNode, newVNode, isSvg) {\n    if (oldVNode === newVNode) ; else if (\n      oldVNode != null &&\n      oldVNode.type === TEXT_NODE &&\n      newVNode.type === TEXT_NODE\n    ) {\n      if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name;\n    } else if (oldVNode == null || oldVNode.name !== newVNode.name) {\n      node = parent.insertBefore(createNode(newVNode, isSvg), node);\n      if (oldVNode != null) {\n        parent.removeChild(oldVNode.node);\n      }\n    } else {\n      var tmpVKid;\n      var oldVKid;\n\n      var oldKey;\n      var newKey;\n\n      var oldVProps = oldVNode.props;\n      var newVProps = newVNode.props;\n\n      var oldVKids = oldVNode.children;\n      var newVKids = newVNode.children;\n\n      var oldHead = 0;\n      var newHead = 0;\n      var oldTail = oldVKids.length - 1;\n      var newTail = newVKids.length - 1;\n\n      isSvg = isSvg || newVNode.name === \"svg\";\n\n      for (var i in merge(oldVProps, newVProps)) {\n        if (\n          (i === \"value\" || i === \"selected\" || i === \"checked\"\n            ? node[i]\n            : oldVProps[i]) !== newVProps[i]\n        ) {\n          patchProperty(node, i, oldVProps[i], newVProps[i], isSvg);\n        }\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldHead])) == null ||\n          oldKey !== getKey(newVKids[newHead])\n        ) {\n          break\n        }\n\n        patchNode(\n          node,\n          oldVKids[oldHead].node,\n          oldVKids[oldHead++],\n          newVKids[newHead++],\n          isSvg\n        );\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldTail])) == null ||\n          oldKey !== getKey(newVKids[newTail])\n        ) {\n          break\n        }\n\n        patchNode(\n          node,\n          oldVKids[oldTail].node,\n          oldVKids[oldTail--],\n          newVKids[newTail--],\n          isSvg\n        );\n      }\n\n      if (oldHead > oldTail) {\n        while (newHead <= newTail) {\n          node.insertBefore(\n            createNode(newVKids[newHead++], isSvg),\n            (oldVKid = oldVKids[oldHead]) && oldVKid.node\n          );\n        }\n      } else if (newHead > newTail) {\n        while (oldHead <= oldTail) {\n          node.removeChild(oldVKids[oldHead++].node);\n        }\n      } else {\n        for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n          if ((oldKey = oldVKids[i].key) != null) {\n            keyed[oldKey] = oldVKids[i];\n          }\n        }\n\n        while (newHead <= newTail) {\n          oldKey = getKey((oldVKid = oldVKids[oldHead]));\n          newKey = getKey(newVKids[newHead]);\n\n          if (\n            newKeyed[oldKey] ||\n            (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n          ) {\n            if (oldKey == null) {\n              node.removeChild(oldVKid.node);\n            }\n            oldHead++;\n            continue\n          }\n\n          if (newKey == null || oldVNode.type === RECYCLED_NODE) {\n            if (oldKey == null) {\n              patchNode(\n                node,\n                oldVKid && oldVKid.node,\n                oldVKid,\n                newVKids[newHead],\n                isSvg\n              );\n              newHead++;\n            }\n            oldHead++;\n          } else {\n            if (oldKey === newKey) {\n              patchNode(node, oldVKid.node, oldVKid, newVKids[newHead], isSvg);\n              newKeyed[newKey] = true;\n              oldHead++;\n            } else {\n              if ((tmpVKid = keyed[newKey]) != null) {\n                patchNode(\n                  node,\n                  node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                  tmpVKid,\n                  newVKids[newHead],\n                  isSvg\n                );\n                newKeyed[newKey] = true;\n              } else {\n                patchNode(\n                  node,\n                  oldVKid && oldVKid.node,\n                  null,\n                  newVKids[newHead],\n                  isSvg\n                );\n              }\n            }\n            newHead++;\n          }\n        }\n\n        while (oldHead <= oldTail) {\n          if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n            node.removeChild(oldVKid.node);\n          }\n        }\n\n        for (var i in keyed) {\n          if (newKeyed[i] == null) {\n            node.removeChild(keyed[i].node);\n          }\n        }\n      }\n    }\n\n    return (newVNode.node = node)\n  };\n\n  var createVNode = function(name, props, children, node, key, type) {\n    return {\n      name: name,\n      props: props,\n      children: children,\n      node: node,\n      type: type,\n      key: key\n    }\n  };\n\n  var createTextVNode = function(value, node) {\n    return createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, null, TEXT_NODE)\n  };\n\n  var recycleNode = function(node) {\n    return node.nodeType === TEXT_NODE\n      ? createTextVNode(node.nodeValue, node)\n      : createVNode(\n          node.nodeName.toLowerCase(),\n          EMPTY_OBJ,\n          map.call(node.childNodes, recycleNode),\n          node,\n          null,\n          RECYCLED_NODE\n        )\n  };\n\n  var patch = function(node, vdom) {\n    return (\n      ((node = patchNode(\n        node.parentNode,\n        node,\n        node.vdom || recycleNode(node),\n        vdom\n      )).vdom = vdom),\n      node\n    )\n  };\n\n  var h = function(name, props) {\n    for (var vnode, rest = [], children = [], i = arguments.length; i-- > 2; ) {\n      rest.push(arguments[i]);\n    }\n\n    while (rest.length > 0) {\n      if (isArray((vnode = rest.pop()))) {\n        for (var i = vnode.length; i-- > 0; ) {\n          rest.push(vnode[i]);\n        }\n      } else if (vnode === false || vnode === true || vnode == null) ; else {\n        children.push(typeof vnode === \"object\" ? vnode : createTextVNode(vnode));\n      }\n    }\n\n    props = props || EMPTY_OBJ;\n\n    return typeof name === \"function\"\n      ? name(props, children)\n      : createVNode(name, props, children, null, props.key)\n  };\n\n  exports.h = h;\n  exports.patch = patch;\n\n}));\n//# sourceMappingURL=superfine.js.map\n"]}